
方法1. java方式(个人推荐)
直接以main方法运行,主要是省事不易出错.代码如下:

public static void main(String[] args) {
 // 执行中的异常信息会保存在warnings中
 List<String> warnings = new ArrayList<String>();
    try {
        // true:生成的文件覆盖之前的
        boolean overwrite = true;
        // 读取配置,构造 Configuration 对象.
        // 如果不想使用配置文件的话,也可以直接来 new Configuration(),然后给相应属性赋值.
        File configFile = new File("generatorConfig.xml");
        ConfigurationParser cp = new ConfigurationParser(warnings);
        Configuration config = cp.parseConfiguration(configFile);
        DefaultShellCallback callback = new DefaultShellCallback(overwrite);
        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);
        myBatisGenerator.generate(null);
    } catch (SQLException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    } catch (InterruptedException e) {
        e.printStackTrace();
    } catch (InvalidConfigurationException e) {
        e.printStackTrace();
    } catch (XMLParserException e) {
        e.printStackTrace();
    }

    for (String warning : warnings){
        System.out.println(warning);
    }
}
方法2. maven方式
1）pom中 添加
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.7</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.47</version>
                    </dependency>
                    <!--<dependency>
                        <groupId>com.xxg</groupId>
                        <artifactId>mybatis-generator-plugin</artifactId>
                        <version>1.0.0</version>
                    </dependency>-->
                </dependencies>
                <configuration>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>
        </plugins>
    </build>
2）将 文件中的 mybatis-generator-core-1.3.7.jar 替换 maven仓库中的
	目录：\org\mybatis\generator\mybatis-generator-core\1.3.7
3）将 generatorConfig.xml 放入 maven项目的 \src\main\resources 下 并修改 对应的参数
4）然后工程右键,run as -->maven,填写相关参数 mybatis-generator:generate ,运行mybatis generator.

方法3. jar 命令行方式
启动说明
	java -jar mybatis-generator-core-x.x.x.jar -configfile \temp\generatorConfig.xml -overwrite

方法4. eclipse插件方式
	将 mbg-eclipse.zip 解压后的文件 放到 eclipse安装目录\dropins 下 重启eclipse 即可

方法5. 通过GeneratorAntTask类和配置文件生成
由于使用了Ant所以要加入Ant的依赖:
<!-- ant -->
<dependency>
    <groupId>org.apache.ant</groupId>
    <artifactId>ant</artifactId>
    <version>1.10.5</version>
</dependency>
然后新建一个类来测试:
/**
 * @Title: GeneratorAntTask.java
 * @Package com.fendo.pays.utils
 * @Description: TODO
 * @author fendo
 * @date 2017年10月5日 上午11:57:32
 * @version V1.0
*/
public class GeneratorAnt {

	 public static void main(String[] args) {
	   try {
	          GeneratorAntTask task = new GeneratorAntTask();
	          task.setConfigfile("src/main/resources/generatorConfig.xml");  //（配置文件具体path）
	          task.execute();
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	 }
}
